//
// KeyManagementAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class KeyManagementAPI {
    /**
     Add pubkey for current user
     
     - parameter pubkey: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addPubkey(pubkey: String, completion: @escaping ((_ data: Pubkey?,_ error: Error?) -> Void)) {
        addPubkeyWithRequestBuilder(pubkey: pubkey).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Add pubkey for current user
     - POST /pubkeys/{pubkey}
     - This call expects empty body
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - API Key:
       - type: apiKey Authorization 
       - name: two_factor
     - examples: [{contentType=application/json, example="74dfa32b2c227ca2aa9ce3922a735669835443c1c36596795de1f48dbfaf7b2f"}]
     
     - parameter pubkey: (path)  

     - returns: RequestBuilder<Pubkey> 
     */
    open class func addPubkeyWithRequestBuilder(pubkey: String) -> RequestBuilder<Pubkey> {
        var path = "/pubkeys/{pubkey}"
        let pubkeyPreEscape = "\(pubkey)"
        let pubkeyPostEscape = pubkeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{pubkey}", with: pubkeyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Pubkey>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Add pubkey for user by user_id
     
     - parameter userId: (path) Public key to add 
     - parameter pubkey: (path) &#x60;user_id&#x60; to grant public key ownership to 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addPubkeyForUser(userId: String, pubkey: UUID, completion: @escaping ((_ data: Pubkey?,_ error: Error?) -> Void)) {
        addPubkeyForUserWithRequestBuilder(userId: userId, pubkey: pubkey).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Add pubkey for user by user_id
     - POST /users/{user_id}/pubkeys/{pubkey}
     - NOTE: user should have scope `UserPubkeyWrite` This call expects empty body
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - API Key:
       - type: apiKey Authorization 
       - name: two_factor
     - examples: [{contentType=application/json, example="74dfa32b2c227ca2aa9ce3922a735669835443c1c36596795de1f48dbfaf7b2f"}]
     
     - parameter userId: (path) Public key to add 
     - parameter pubkey: (path) &#x60;user_id&#x60; to grant public key ownership to 

     - returns: RequestBuilder<Pubkey> 
     */
    open class func addPubkeyForUserWithRequestBuilder(userId: String, pubkey: UUID) -> RequestBuilder<Pubkey> {
        var path = "/users/{user_id}/pubkeys/{pubkey}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{user_id}", with: userIdPostEscape, options: .literal, range: nil)
        let pubkeyPreEscape = "\(pubkey)"
        let pubkeyPostEscape = pubkeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{pubkey}", with: pubkeyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Pubkey>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Generate custodial wallet
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createWallet(completion: @escaping ((_ data: Pubkey?,_ error: Error?) -> Void)) {
        createWalletWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Generate custodial wallet
     - POST /pubkeys
     - Generates custodial wallet with pubkey for currently authenticated user. This call expects empty body.
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - API Key:
       - type: apiKey Authorization 
       - name: two_factor
     - examples: [{contentType=application/json, example="74dfa32b2c227ca2aa9ce3922a735669835443c1c36596795de1f48dbfaf7b2f"}]

     - returns: RequestBuilder<Pubkey> 
     */
    open class func createWalletWithRequestBuilder() -> RequestBuilder<Pubkey> {
        let path = "/pubkeys"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Pubkey>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Retrieve pubkeys
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPubkeys(completion: @escaping ((_ data: [Pubkey]?,_ error: Error?) -> Void)) {
        getPubkeysWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieve pubkeys
     - GET /pubkeys
     - Retrieves pubkeys owned by currently authenticated user. This call expects empty body.
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example=[ "74dfa32b2c227ca2aa9ce3922a735669835443c1c36596795de1f48dbfaf7b2f", "74dfa32b2c227ca2aa9ce3922a735669835443c1c36596795de1f48dbfaf7b2f" ]}]

     - returns: RequestBuilder<[Pubkey]> 
     */
    open class func getPubkeysWithRequestBuilder() -> RequestBuilder<[Pubkey]> {
        let path = "/pubkeys"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Pubkey]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Retrieve pubkeys by user_id
     
     - parameter userId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPubkeysForUser(userId: UUID, completion: @escaping ((_ data: [Pubkey]?,_ error: Error?) -> Void)) {
        getPubkeysForUserWithRequestBuilder(userId: userId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieve pubkeys by user_id
     - GET /users/{user_id}/pubkeys
     - NOTE: user should have scope `UserPubkeyList`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example=[ "74dfa32b2c227ca2aa9ce3922a735669835443c1c36596795de1f48dbfaf7b2f", "74dfa32b2c227ca2aa9ce3922a735669835443c1c36596795de1f48dbfaf7b2f" ]}]
     
     - parameter userId: (path)  

     - returns: RequestBuilder<[Pubkey]> 
     */
    open class func getPubkeysForUserWithRequestBuilder(userId: UUID) -> RequestBuilder<[Pubkey]> {
        var path = "/users/{user_id}/pubkeys"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{user_id}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Pubkey]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
