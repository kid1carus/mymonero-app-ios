//
// UserInviteAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UserInviteAPI {
    /**
     Accepts the pending invite activating the user
     
     - parameter inviteId: (path)  
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func activateInvite(inviteId: String, body: AcceptInviteRequest, completion: @escaping ((_ data: AcceptInviteResponse?,_ error: Error?) -> Void)) {
        activateInviteWithRequestBuilder(inviteId: inviteId, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Accepts the pending invite activating the user
     - POST /invites/{invite_id}/accept
     - If the email exists associated with the invite then that user is activated
     - examples: [{contentType=application/json, example={
  "message" : "message"
}}]
     
     - parameter inviteId: (path)  
     - parameter body: (body)  

     - returns: RequestBuilder<AcceptInviteResponse> 
     */
    open class func activateInviteWithRequestBuilder(inviteId: String, body: AcceptInviteRequest) -> RequestBuilder<AcceptInviteResponse> {
        var path = "/invites/{invite_id}/accept"
        let inviteIdPreEscape = "\(inviteId)"
        let inviteIdPostEscape = inviteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{invite_id}", with: inviteIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AcceptInviteResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Given a code returns information about the user invite if a record exists for it
     
     - parameter inviteId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getInvite(inviteId: String, completion: @escaping ((_ data: DisplayUserInvite?,_ error: Error?) -> Void)) {
        getInviteWithRequestBuilder(inviteId: inviteId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Given a code returns information about the user invite if a record exists for it
     - GET /invites/{invite_id}
     - examples: [{contentType=application/json, example={
  "activated_at" : "2000-01-23T04:56:07.000+00:00",
  "code" : "code",
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}}]
     
     - parameter inviteId: (path)  

     - returns: RequestBuilder<DisplayUserInvite> 
     */
    open class func getInviteWithRequestBuilder(inviteId: String) -> RequestBuilder<DisplayUserInvite> {
        var path = "/invites/{invite_id}"
        let inviteIdPreEscape = "\(inviteId)"
        let inviteIdPostEscape = inviteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{invite_id}", with: inviteIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DisplayUserInvite>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns a list of user invite records associated with the user
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getInvites(completion: @escaping ((_ data: [DisplayUserInvite]?,_ error: Error?) -> Void)) {
        getInvitesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns a list of user invite records associated with the user
     - GET /invites
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example=[ {
  "activated_at" : "2000-01-23T04:56:07.000+00:00",
  "code" : "code",
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}, {
  "activated_at" : "2000-01-23T04:56:07.000+00:00",
  "code" : "code",
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
} ]}]

     - returns: RequestBuilder<[DisplayUserInvite]> 
     */
    open class func getInvitesWithRequestBuilder() -> RequestBuilder<[DisplayUserInvite]> {
        let path = "/invites"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[DisplayUserInvite]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
