//
// CartAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class CartAPI {
    /**
     Update cart items by adding new items to the cart
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addItems(body: UpdateCartRequest, completion: @escaping ((_ data: DisplayOrder?,_ error: Error?) -> Void)) {
        addItemsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update cart items by adding new items to the cart
     - POST /cart
     - NOTE: user should have scope `CartUpdate`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "misc_refunded_total_in_cents" : 0,
  "order_number" : "order_number",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "refunded_total_in_cents" : 6,
  "paid_at" : "2000-01-23T04:56:07.000+00:00",
  "total_in_cents" : 5,
  "expires_at" : "2000-01-23T04:56:07.000+00:00",
  "seconds_until_expiry" : 1,
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "user_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "organization_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "eligible_for_refund" : true,
  "payment_method_data" : "",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "user" : "{}",
  "order_items" : [ "{}", "{}" ],
  "status" : "Cancelled"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<DisplayOrder> 
     */
    open class func addItemsWithRequestBuilder(body: UpdateCartRequest) -> RequestBuilder<DisplayOrder> {
        let path = "/cart"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DisplayOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Checkout cart with provided payment details
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func checkout(body: CheckoutCartRequestBody, completion: @escaping ((_ data: DisplayOrder?,_ error: Error?) -> Void)) {
        checkoutWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Checkout cart with provided payment details
     - POST /cart/checkout
     - NOTE: user should have scope `CartUpdate`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "misc_refunded_total_in_cents" : 0,
  "order_number" : "order_number",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "refunded_total_in_cents" : 6,
  "paid_at" : "2000-01-23T04:56:07.000+00:00",
  "total_in_cents" : 5,
  "expires_at" : "2000-01-23T04:56:07.000+00:00",
  "seconds_until_expiry" : 1,
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "user_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "organization_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "eligible_for_refund" : true,
  "payment_method_data" : "",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "user" : "{}",
  "order_items" : [ "{}", "{}" ],
  "status" : "Cancelled"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<DisplayOrder> 
     */
    open class func checkoutWithRequestBuilder(body: CheckoutCartRequestBody) -> RequestBuilder<DisplayOrder> {
        let path = "/cart/checkout"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DisplayOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Checkout cart with provided payment details
     
     - parameter _id: (path)  
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func checkoutOrder(_id: UUID, body: CheckoutCartRequestBody, completion: @escaping ((_ data: DisplayOrder?,_ error: Error?) -> Void)) {
        checkoutOrderWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Checkout cart with provided payment details
     - POST /cart/checkout/{id}
     - NOTE: user should have scope `CartUpdate`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "misc_refunded_total_in_cents" : 0,
  "order_number" : "order_number",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "refunded_total_in_cents" : 6,
  "paid_at" : "2000-01-23T04:56:07.000+00:00",
  "total_in_cents" : 5,
  "expires_at" : "2000-01-23T04:56:07.000+00:00",
  "seconds_until_expiry" : 1,
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "user_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "organization_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "eligible_for_refund" : true,
  "payment_method_data" : "",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "user" : "{}",
  "order_items" : [ "{}", "{}" ],
  "status" : "Cancelled"
}}]
     
     - parameter _id: (path)  
     - parameter body: (body)  

     - returns: RequestBuilder<DisplayOrder> 
     */
    open class func checkoutOrderWithRequestBuilder(_id: UUID, body: CheckoutCartRequestBody) -> RequestBuilder<DisplayOrder> {
        var path = "/cart/checkout/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DisplayOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Remove all items from cart
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func clear(completion: @escaping ((_ data: DisplayOrder?,_ error: Error?) -> Void)) {
        clearWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Remove all items from cart
     - DELETE /cart
     - NOTE: user should have scope `CartUpdate`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "misc_refunded_total_in_cents" : 0,
  "order_number" : "order_number",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "refunded_total_in_cents" : 6,
  "paid_at" : "2000-01-23T04:56:07.000+00:00",
  "total_in_cents" : 5,
  "expires_at" : "2000-01-23T04:56:07.000+00:00",
  "seconds_until_expiry" : 1,
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "user_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "organization_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "eligible_for_refund" : true,
  "payment_method_data" : "",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "user" : "{}",
  "order_items" : [ "{}", "{}" ],
  "status" : "Cancelled"
}}]

     - returns: RequestBuilder<DisplayOrder> 
     */
    open class func clearWithRequestBuilder() -> RequestBuilder<DisplayOrder> {
        let path = "/cart"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DisplayOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Return cart content
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getItems(completion: @escaping ((_ data: DisplayOrder?,_ error: Error?) -> Void)) {
        getItemsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Return cart content
     - GET /cart
     - NOTE: user should have scope `CartShow`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "misc_refunded_total_in_cents" : 0,
  "order_number" : "order_number",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "refunded_total_in_cents" : 6,
  "paid_at" : "2000-01-23T04:56:07.000+00:00",
  "total_in_cents" : 5,
  "expires_at" : "2000-01-23T04:56:07.000+00:00",
  "seconds_until_expiry" : 1,
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "user_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "organization_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "eligible_for_refund" : true,
  "payment_method_data" : "",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "user" : "{}",
  "order_items" : [ "{}", "{}" ],
  "status" : "Cancelled"
}}]

     - returns: RequestBuilder<DisplayOrder> 
     */
    open class func getItemsWithRequestBuilder() -> RequestBuilder<DisplayOrder> {
        let path = "/cart"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DisplayOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Replace cart items
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func replaceItems(body: UpdateCartRequest, completion: @escaping ((_ data: DisplayOrder?,_ error: Error?) -> Void)) {
        replaceItemsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Replace cart items
     - PUT /cart
     - NOTE: user should have scope `CartUpdate`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "misc_refunded_total_in_cents" : 0,
  "order_number" : "order_number",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "refunded_total_in_cents" : 6,
  "paid_at" : "2000-01-23T04:56:07.000+00:00",
  "total_in_cents" : 5,
  "expires_at" : "2000-01-23T04:56:07.000+00:00",
  "seconds_until_expiry" : 1,
  "updated_at" : "2000-01-23T04:56:07.000+00:00",
  "user_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "organization_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "eligible_for_refund" : true,
  "payment_method_data" : "",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "user" : "{}",
  "order_items" : [ "{}", "{}" ],
  "status" : "Cancelled"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<DisplayOrder> 
     */
    open class func replaceItemsWithRequestBuilder(body: UpdateCartRequest) -> RequestBuilder<DisplayOrder> {
        let path = "/cart"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DisplayOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
