//
// ProxyAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ProxyAPI {
    /**
     Calls a pre-defined proxy service with the provided data
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callProxy(body: ProxyCallParameters, completion: @escaping ((_ data: ProxyResult?,_ error: Error?) -> Void)) {
        callProxyWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Calls a pre-defined proxy service with the provided data
     - POST /proxy
     - Returns the response from the proxied service as a string
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "json" : "",
  "value" : "value"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<ProxyResult> 
     */
    open class func callProxyWithRequestBuilder(body: ProxyCallParameters) -> RequestBuilder<ProxyResult> {
        let path = "/proxy"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ProxyResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
