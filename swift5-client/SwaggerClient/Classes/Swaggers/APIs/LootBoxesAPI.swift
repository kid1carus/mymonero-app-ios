//
// LootBoxesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class LootBoxesAPI {
    /**
     Create a new lootbox
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createLootbox(body: AdminNewLootBoxBody, completion: @escaping ((_ data: PublicLootBox?,_ error: Error?) -> Void)) {
        createLootboxWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create a new lootbox
     - POST /lootboxes
     - NOTE: user should have scope `AdminLootBoxWrite`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "total_value" : 5.962133916683182,
  "average_rhythm_score" : 0.8008281904610115,
  "lootbox_type" : "{}",
  "scores" : [ 1, 1 ],
  "owner_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "prices" : [ 6, 6 ],
  "lootbox_type_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "status" : "Draft",
  "yats" : [ "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ", "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ" ]
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<PublicLootBox> 
     */
    open class func createLootboxWithRequestBuilder(body: AdminNewLootBoxBody) -> RequestBuilder<PublicLootBox> {
        let path = "/lootboxes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PublicLootBox>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete a lootbox
     
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteLootbox(_id: UUID, completion: @escaping ((_ data: PublicLootBox?,_ error: Error?) -> Void)) {
        deleteLootboxWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Delete a lootbox
     - DELETE /lootboxes/{id}
     - NOTE: user should have scope `AdminLootBoxWrite`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "total_value" : 5.962133916683182,
  "average_rhythm_score" : 0.8008281904610115,
  "lootbox_type" : "{}",
  "scores" : [ 1, 1 ],
  "owner_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "prices" : [ 6, 6 ],
  "lootbox_type_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "status" : "Draft",
  "yats" : [ "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ", "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ" ]
}}]
     
     - parameter _id: (path)  

     - returns: RequestBuilder<PublicLootBox> 
     */
    open class func deleteLootboxWithRequestBuilder(_id: UUID) -> RequestBuilder<PublicLootBox> {
        var path = "/lootboxes/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PublicLootBox>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter dir
     */
    public enum Dir_listLootboxes: String { 
        case asc = "Asc"
        case desc = "Desc"
    }

    /**
     * enum for parameter status
     */
    public enum Status_listLootboxes: String { 
        case draft = "Draft"
        case available = "Available"
        case owned = "Owned"
        case used = "Used"
    }

    /**
     Fetch lootboxes
     
     - parameter dir: (query)  (optional)
     - parameter limit: (query)  (optional)
     - parameter ownerId: (query) Search by LootBox owner (optional)
     - parameter page: (query)  (optional)
     - parameter sort: (query)  (optional)
     - parameter status: (query) Search for LootBoxes by status (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listLootboxes(dir: Dir_listLootboxes? = nil, limit: Int? = nil, ownerId: UUID? = nil, page: Int? = nil, sort: String? = nil, status: Status_listLootboxes? = nil, completion: @escaping ((_ data: ListOfPublicLootBox?,_ error: Error?) -> Void)) {
        listLootboxesWithRequestBuilder(dir: dir, limit: limit, ownerId: ownerId, page: page, sort: sort, status: status).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Fetch lootboxes
     - GET /lootboxes
     - Return lootboxes with their usage and availability information NOTE: user should have scope `LootBoxAdmin` or `LootBoxUse`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "data" : [ "{}", "{}" ],
  "paging" : "{}"
}}]
     
     - parameter dir: (query)  (optional)
     - parameter limit: (query)  (optional)
     - parameter ownerId: (query) Search by LootBox owner (optional)
     - parameter page: (query)  (optional)
     - parameter sort: (query)  (optional)
     - parameter status: (query) Search for LootBoxes by status (optional)

     - returns: RequestBuilder<ListOfPublicLootBox> 
     */
    open class func listLootboxesWithRequestBuilder(dir: Dir_listLootboxes? = nil, limit: Int? = nil, ownerId: UUID? = nil, page: Int? = nil, sort: String? = nil, status: Status_listLootboxes? = nil) -> RequestBuilder<ListOfPublicLootBox> {
        let path = "/lootboxes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "dir": dir?.rawValue, 
            "limit": limit?.encodeToJSON(), 
            "owner_id": ownerId, 
            "page": page?.encodeToJSON(), 
            "sort": sort, 
            "status": status?.rawValue
        ])

        let requestBuilder: RequestBuilder<ListOfPublicLootBox>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Open lootbox
     
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func openLootbox(_id: UUID, completion: @escaping ((_ data: PublicLootBox?,_ error: Error?) -> Void)) {
        openLootboxWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Open lootbox
     - POST /lootboxes/{id}/open
     - Will reassign all yats to user and return full lootbox view NOTE: user should have scope `LootBoxUse`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "total_value" : 5.962133916683182,
  "average_rhythm_score" : 0.8008281904610115,
  "lootbox_type" : "{}",
  "scores" : [ 1, 1 ],
  "owner_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "prices" : [ 6, 6 ],
  "lootbox_type_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "status" : "Draft",
  "yats" : [ "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ", "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ" ]
}}]
     
     - parameter _id: (path)  

     - returns: RequestBuilder<PublicLootBox> 
     */
    open class func openLootboxWithRequestBuilder(_id: UUID) -> RequestBuilder<PublicLootBox> {
        var path = "/lootboxes/{id}/open"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PublicLootBox>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Show information about lootbox
     
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func showLootbox(_id: UUID, completion: @escaping ((_ data: PublicLootBox?,_ error: Error?) -> Void)) {
        showLootboxWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Show information about lootbox
     - GET /lootboxes/{id}
     - For admin it will show full lootbox information including yats For user only lootbox owned by user, yats stripped NOTE: user should have scope `AdminLootBoxRead` or `LootBoxUse`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "total_value" : 5.962133916683182,
  "average_rhythm_score" : 0.8008281904610115,
  "lootbox_type" : "{}",
  "scores" : [ 1, 1 ],
  "owner_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "prices" : [ 6, 6 ],
  "lootbox_type_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "status" : "Draft",
  "yats" : [ "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ", "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ" ]
}}]
     
     - parameter _id: (path)  

     - returns: RequestBuilder<PublicLootBox> 
     */
    open class func showLootboxWithRequestBuilder(_id: UUID) -> RequestBuilder<PublicLootBox> {
        var path = "/lootboxes/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PublicLootBox>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update a lootbox
     
     - parameter _id: (path)  
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateLootbox(_id: UUID, body: AdminUpdateLootBoxBody, completion: @escaping ((_ data: PublicLootBox?,_ error: Error?) -> Void)) {
        updateLootboxWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update a lootbox
     - PATCH /lootboxes/{id}
     - NOTE: user should have scope `AdminLootBoxWrite`
     - API Key:
       - type: apiKey Authorization,X-Api-Key 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "owner" : "{}",
  "total_value" : 5.962133916683182,
  "average_rhythm_score" : 0.8008281904610115,
  "lootbox_type" : "{}",
  "scores" : [ 1, 1 ],
  "owner_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "prices" : [ 6, 6 ],
  "lootbox_type_id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "status" : "Draft",
  "yats" : [ "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ", "ðŸ±ðŸ‰ðŸ‹ðŸ´ðŸµ" ]
}}]
     
     - parameter _id: (path)  
     - parameter body: (body)  

     - returns: RequestBuilder<PublicLootBox> 
     */
    open class func updateLootboxWithRequestBuilder(_id: UUID, body: AdminUpdateLootBoxBody) -> RequestBuilder<PublicLootBox> {
        var path = "/lootboxes/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<PublicLootBox>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
