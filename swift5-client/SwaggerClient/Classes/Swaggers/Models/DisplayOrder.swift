//
// DisplayOrder.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct DisplayOrder: Codable {

    public enum Status: String, Codable { 
        case cancelled = "Cancelled"
        case draft = "Draft"
        case paid = "Paid"
        case pendingPayment = "PendingPayment"
    }
    /** A UTC timestamp for when this order was initially created. */
    public var createdAt: Date
    /** Whether an order is eligible for a refund via an admin. */
    public var eligibleForRefund: Bool
    /** Checkout carts have a limited time before they expire. This prevents users from blocking inventory from being  sold to other customers. The expiry time is configurable on the server and is typically 5 minutes. */
    public var expiresAt: Date?
    /** The unique identifier for this order */
    public var _id: UUID
    /** The total of miscellaneous refund amounts retirned to the order. */
    public var miscRefundedTotalInCents: Int64
    /** The list of individual line items making up this order. */
    public var orderItems: [JSONValue]
    /** The order number is the last 8 characters of the order&#39;s ID for user display purposes. */
    public var orderNumber: String
    /** The organization id of the user, if applicable. This will generally be null, unless the purchase is coming via  a referral programme. */
    public var organizationId: UUID?
    /** A UTC timestamp for when payment for this order was received. Will be null if no payment has been made yet. */
    public var paidAt: Date?
    /** Payment method data for payment methods that provide QR code checkout options set via checkout. */
    public var paymentMethodData: JSONValue?
    /** The total of refund amounts for the order. */
    public var refundedTotalInCents: Int64
    /** A convenience field indicating how long before &#x60;expires_at&#x60; is reached. */
    public var secondsUntilExpiry: Int?
    /** The order of the status. Orders start in &#39;Draft&#39; status, then move to &#39;PendingPayment&#39; and finally, &#39;Paid&#39;,  unless they are &#39;Cancelled&#39;. */
    public var status: Status
    /** The sum of all the items in this order, plus fees, in USD cents. */
    public var totalInCents: Int64
    /** A UTC timestamp for the last time any field in this order was modified. */
    public var updatedAt: Date
    /** The details of the user placing this order. */
    public var user: JSONValue
    /** The identifier of the user placing this order */
    public var userId: UUID

    public init(createdAt: Date, eligibleForRefund: Bool, expiresAt: Date?, _id: UUID, miscRefundedTotalInCents: Int64, orderItems: [JSONValue], orderNumber: String, organizationId: UUID?, paidAt: Date?, paymentMethodData: JSONValue?, refundedTotalInCents: Int64, secondsUntilExpiry: Int?, status: Status, totalInCents: Int64, updatedAt: Date, user: JSONValue, userId: UUID) {
        self.createdAt = createdAt
        self.eligibleForRefund = eligibleForRefund
        self.expiresAt = expiresAt
        self._id = _id
        self.miscRefundedTotalInCents = miscRefundedTotalInCents
        self.orderItems = orderItems
        self.orderNumber = orderNumber
        self.organizationId = organizationId
        self.paidAt = paidAt
        self.paymentMethodData = paymentMethodData
        self.refundedTotalInCents = refundedTotalInCents
        self.secondsUntilExpiry = secondsUntilExpiry
        self.status = status
        self.totalInCents = totalInCents
        self.updatedAt = updatedAt
        self.user = user
        self.userId = userId
    }

    public enum CodingKeys: String, CodingKey { 
        case createdAt = "created_at"
        case eligibleForRefund = "eligible_for_refund"
        case expiresAt = "expires_at"
        case _id = "id"
        case miscRefundedTotalInCents = "misc_refunded_total_in_cents"
        case orderItems = "order_items"
        case orderNumber = "order_number"
        case organizationId = "organization_id"
        case paidAt = "paid_at"
        case paymentMethodData = "payment_method_data"
        case refundedTotalInCents = "refunded_total_in_cents"
        case secondsUntilExpiry = "seconds_until_expiry"
        case status
        case totalInCents = "total_in_cents"
        case updatedAt = "updated_at"
        case user
        case userId = "user_id"
    }


}

