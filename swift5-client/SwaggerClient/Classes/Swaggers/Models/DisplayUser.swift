//
// DisplayUser.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct DisplayUser: Codable {

    public enum Role: String, Codable { 
        case admin = "Admin"
        case orgController = "OrgController"
        case orgMember = "OrgMember"
        case orgOwner = "OrgOwner"
        case bot = "Bot"
        case _super = "Super"
        case user = "User"
    }
    public enum TwoFactorAuth: String, Codable { 
        case googleAuthenticator = "GoogleAuthenticator"
        case sms = "SMS"
    }
    public var alternateId: String?
    public var createdAt: Date
    public var deactivatedAt: Date?
    public var email: String?
    public var emojiIds: [String]
    public var firstName: String?
    public var freeLimit: Int
    public var _id: UUID
    public var isActive: Bool
    public var lastName: String?
    public var pubkeys: [String]
    public var remainingFreeEmoji: Int
    public var role: Role
    public var source: String?
    public var twoFactorAuth: [TwoFactorAuth]?
    public var updatedAt: Date

    public init(alternateId: String?, createdAt: Date, deactivatedAt: Date?, email: String?, emojiIds: [String], firstName: String?, freeLimit: Int, _id: UUID, isActive: Bool, lastName: String?, pubkeys: [String], remainingFreeEmoji: Int, role: Role, source: String?, twoFactorAuth: [TwoFactorAuth]?, updatedAt: Date) {
        self.alternateId = alternateId
        self.createdAt = createdAt
        self.deactivatedAt = deactivatedAt
        self.email = email
        self.emojiIds = emojiIds
        self.firstName = firstName
        self.freeLimit = freeLimit
        self._id = _id
        self.isActive = isActive
        self.lastName = lastName
        self.pubkeys = pubkeys
        self.remainingFreeEmoji = remainingFreeEmoji
        self.role = role
        self.source = source
        self.twoFactorAuth = twoFactorAuth
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey { 
        case alternateId = "alternate_id"
        case createdAt = "created_at"
        case deactivatedAt = "deactivated_at"
        case email
        case emojiIds = "emoji_ids"
        case firstName = "first_name"
        case freeLimit = "free_limit"
        case _id = "id"
        case isActive = "is_active"
        case lastName = "last_name"
        case pubkeys
        case remainingFreeEmoji = "remaining_free_emoji"
        case role
        case source
        case twoFactorAuth = "two_factor_auth"
        case updatedAt = "updated_at"
    }


}

