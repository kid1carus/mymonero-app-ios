//
// CheckoutCartRequestBody.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct CheckoutCartRequestBody: Codable {

    public enum Method: String, Codable { 
        case provider = "Provider"
        case card = "Card"
        case _default = "Default"
        case free = "Free"
        case cash = "Cash"
    }
    public enum Provider: String, Codable { 
        case free = "Free"
        case globee = "Globee"
        case stripe = "Stripe"
        case cash = "Cash"
    }
    /** Amount paid (required with &#x60;Cash&#x60; payment) */
    public var amount: Int?
    /** Id of external transaction (required with &#x60;Cash&#x60; payment) */
    public var externalReference: String?
    /** Payment method type */
    public var method: Method
    /** Use stored payment method (only with &#x60;Provider&#x60; method) */
    public var paymentMethodId: UUID?
    /** Payment provider (required with &#x60;Provider&#x60; or &#x60;Card&#x60; methods)  payment types. */
    public var provider: Provider?
    /** Optional: The user&#39;s public key to associate with this emoji id */
    public var pubkey: String?
    /** Save card payment method. */
    public var savePaymentMethod: Bool?
    /** Set card payment method as default. */
    public var setDefault: Bool?
    /** Card payment token (required with &#x60;Card&#x60; method) */
    public var token: String?
    /** Optional: tracking data */
    public var trackingData: JSONValue?

    public init(amount: Int?, externalReference: String?, method: Method, paymentMethodId: UUID?, provider: Provider?, pubkey: String?, savePaymentMethod: Bool?, setDefault: Bool?, token: String?, trackingData: JSONValue?) {
        self.amount = amount
        self.externalReference = externalReference
        self.method = method
        self.paymentMethodId = paymentMethodId
        self.provider = provider
        self.pubkey = pubkey
        self.savePaymentMethod = savePaymentMethod
        self.setDefault = setDefault
        self.token = token
        self.trackingData = trackingData
    }

    public enum CodingKeys: String, CodingKey { 
        case amount
        case externalReference = "external_reference"
        case method
        case paymentMethodId = "payment_method_id"
        case provider
        case pubkey
        case savePaymentMethod = "save_payment_method"
        case setDefault = "set_default"
        case token
        case trackingData = "tracking_data"
    }


}

